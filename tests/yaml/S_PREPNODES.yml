template: true
valuesFilePath: ../values/gitRepoValues.yml
resources:
  - name: S_PREPNODES_GitRepo_resource
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation.path }}
      branches:
        include: master
pipelines:

  - name: S_PREPNODES
    steps:
      - name: S_PREPNODES
        type: Bash
        configuration:
          inputResources:
            - name: S_PREPNODES_GitRepo_resource
              trigger: false
          integrations:
            - name: s_artifactory
        execution:
          onExecute:
            - echo "executing step..."
            - jfrog rt u ${res_S_PREPNODES_GitRepo_resource_resourcePath}/tests/core/helmdeploy/simplehelm-0.3.0.tgz "helmgeneric/" --explode
            - jfrog rt u ${res_S_PREPNODES_GitRepo_resource_resourcePath}/tests/core/helmdeploy/simplehelm-0.3.0.tgz "test-automation-helm-local/" --explode
            - jfrog rt u ${res_S_PREPNODES_GitRepo_resource_resourcePath}/tests/core/helmdeploy/simplehelm-0.3.0.tgz "simplecharts/"
            - jfrog rt u ${res_S_PREPNODES_GitRepo_resource_resourcePath}/tests/core/helmdeploy/index.yaml "simplecharts/"

      - name: S_PREPNODES_BASH
        type: Matrix
        stepMode: Bash
        configuration:
          runtime:
            type: host
          nodePool: u18dynamic
          multiNode: true
          inputSteps:
            - name: S_PREPNODES
        stepletMultipliers:
          environmentVariables:
            {{ range $i, $e := until 100 }}
            - foo: "bar{{$i}}"
              x: {{$i}}
            {{ end }}
        execution:
          onExecute:
            - echo "executing step..."

      - name: S_PREPNODES_PowerShell
        type: Matrix
        stepMode: Powershell
        configuration:
          runtime:
            type: host
          nodePool: win_2019
          multiNode: true
          inputSteps:
            - name: S_PREPNODES
        stepletMultipliers:
          environmentVariables:
            {{ range $i, $e := until 50 }}
            - foo: "bar{{$i}}"
              x: {{$i}}
            {{ end }}
        execution:
          onExecute:
            - write-output "executing step..."
