resources:
  - name: S_PromoteBuild_0009_input
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: name
      buildNumber: '1'
  - name: S_PromoteBuild_0009_output
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: name
      buildNumber: '1'

pipelines:
  - name: PromoteBuild
    steps:
      - name: S_PromoteBuild_0009_1
        type: Bash
        configuration:
          integrations:
            - name: s_artifactory
          outputResources:
            - name: S_PromoteBuild_0009_input
        execution:
          onExecute:
            - echo "${run_id}" > S_PromoteBuild_0009.txt
            - jfrog rt upload S_PromoteBuild_0009.txt test-automation-generic-local
            - jfrog rt build-publish ${JFROG_CLI_BUILD_NAME} ${JFROG_CLI_BUILD_NUMBER}
            - write_output S_PromoteBuild_0009_input buildName=${JFROG_CLI_BUILD_NAME} buildNumber=${JFROG_CLI_BUILD_NUMBER}
      
      - name: S_PromoteBuild_0009_3
        type: Bash
        configuration:
          inputSteps:
            - name: S_PromoteBuild_0009_1
          integrations:
            - name: s_artifactory
          inputResources:
            - name: S_PromoteBuild_0009_output
        execution:
          onExecute:
            - jfrog rt curl -XGET /api/build/${JFROG_CLI_BUILD_NAME}/${JFROG_CLI_BUILD_NUMBER} -o ${step_tmp_dir}/response
            - jfrog rt curl -XDELETE /api/build/${JFROG_CLI_BUILD_NAME}?buildNumbers=${JFROG_CLI_BUILD_NUMBER}&artifacts=1
            - cat ${step_tmp_dir}/response
            - myComment=$(cat ${step_tmp_dir}/response | jq -r '.buildInfo.statuses[0].comment')
            - if [ $myComment != "My test comment" ] ; then return 1; fi
