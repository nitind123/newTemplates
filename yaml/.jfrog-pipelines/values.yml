# [Required]
metadata:
  # [Required] All the underlying pipelines & resources names will be prefixed with appName for easy identifications & search
  serviceName:  nodeJs

# [Required]
inputs:
  # [Required]
  pipeline:
    configuration:
      # [Required]
      integrations:
        - s_gitHub
        - s_slack
      # [Optional] To set environment variables
      environmentVariables:
        foo: bar
        test: env
      # [Required]
      retentionPolicy:
        maxAgeDays: 90
        minRuns: 10

  # [Required] Configure Git repository where application code is present
  sourceRepository:
    # Support all the Git Resource configuration properties
    # Ref: https://jfrog.com/help/r/jfrog-pipelines-documentation/gitrepo
    path: nitind123/newTemplates
    gitProvider: s_gitHub
    branches:
      include: nodejsTemplate

  integrations:
    artifactory: s_artifactory
    sonar: s_sonar

# [Required]
configurations:

  # [Optional] Defaults to repository root folder
  sourceDirectory: 'yaml/javaTem'

  steps:
    build:
      runtime:
        versions:
          - "16.10.0"
      onStart:
        - npm i
      onExecute:
        - npm -v
      onFailure:
        - echo 'failure'
      onSuccess:
        - echo 'success'

    codeQuality:
      runtime:
        versions:
          - "16.10.0"
      onStart:
        - npm -v
      onExecute:
        - npm run lint
      onFailure:
        - echo 'failure'
      onSuccess:
        - echo 'success'


    sonarScan:
      runtime:
        custom:
          registry: s_artifactory
          sourceRepository: docker-staging-local
          name: docker.jfrog.io/sonar-scanner
          tag: latest
      onStart:
        - npm i
      onExecute:
        - echo 'func'
      onFailure:
        - echo 'failure'
      onSuccess:
        - echo 'success'

    publish:
      runtime:
        versions:
          - "16.10.0"
      onExecute:
        - jfrog rt publish
      onFailure:
        - echo 'failure'
      onSuccess:
        - echo 'success'


    clamScan:
      runtime:
        custom:
          registry: s_artifactory
          sourceRepository: docker-staging-local
          name: docker.jfrog.io/clam-scanner
          tag: latest
      onStart:
        - npm i
      onFailure:
        - echo 'failure'
      onSuccess:
        - echo 'success'
        
controls:

  # [Optional] Feature to control the pipeline trigger options, defaults to `sourceRepository`

  build:
    runtime: auto

  codeQuality:
    # [Optional] Defaults to true
    enabled: true
    runtime: auto

  sonarScan:
    runtime: custom

  clamScan:
    runtime: custom

  publish:
    # [Optional] Defaults to false
    enabled: true
    runtime: auto

  triggerBy:
    # [Optional] Defaults to false
    sourceRepository: true
